import type { NextPage } from "next";
import Head from "next/head";
import { useState, useCallback } from "react";
import { web3 } from "@project-serum/anchor";

import Pokemon from "../components/Pokemon";
import usePokemon from "../components/hooks/usePokemon";
import useSolana from "../components/hooks/useSolana";

import styles from "../styles/Home.module.css";
import WalletButton from "../components/WalletButton";
import Ranking from "../components/Ranking";

const Home: NextPage = () => {
  const { firstPokemon, secondPokemon, validateDuplication } = usePokemon();
  const {
    walletAddress,
    connectWallet,
    program,
    programAccount,
    publicKey,
    baseAccount,
    wallet,
  } = useSolana();

  const [pokemonPairs, setPokemonPairs] = useState<any>(null);

  const getPokemonPairs = useCallback(async () => {
    try {
      let account = await programAccount?.baseAccount.fetch(publicKey!);
      setPokemonPairs(account?.pokemonPairs);
    } catch (e) {
      console.error("Error in getPokemonPairs: " + e);
    }
  }, [programAccount?.baseAccount, publicKey]);

  const onVote = async ({ pokemonVoted }: { pokemonVoted: string }) => {
    if (!pokemonPairs) {
      let accounts: any = {
        accounts: {
          baseAccount: publicKey,
          user: wallet?.publicKey,
          systemProgram: web3.SystemProgram.programId,
        },
        signers: [baseAccount],
      };

      getPokemonPairs().then(async () => await program?.initialize(accounts));
    } else {
      let accounts: any = {
        accounts: {
          baseAccount: publicKey!,
          user: wallet?.publicKey,
        },
      };
      await program?.vote(
        firstPokemon?.name,
        secondPokemon?.name,
        pokemonVoted,
        accounts
      );

      getPokemonPairs();
      validateDuplication();
    }
  };

  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <WalletButton
        walletAddress={walletAddress}
        connectWallet={connectWallet}
      />

      {walletAddress && (
        <main className={styles.main}>
          <h1>Pokemon battles votes</h1>
          <br />
          <br />
          <br />
          <div className={styles.wrapper}>
            <section className={styles.mostVoted}>
              {/* Most voted */}
              <h1>Most voted</h1>
              <Ranking getPairs={getPokemonPairs} pokemonPairs={pokemonPairs} />
            </section>
            <section className={styles.voteSection}>
              <Pokemon onVote={onVote} pokemon={firstPokemon!} />
              <h1>VS</h1>
              <Pokemon onVote={onVote} pokemon={secondPokemon!} />
            </section>
          </div>
        </main>
      )}
    </div>
  );
};

export default Home;
